apply from:'../config.gradle'
group 'edge.woo'
version '1.0'

apply plugin: 'java'
apply plugin: 'idea'

sourceCompatibility = 1.8
targetCompatibility = 1.8
repositories {
    mavenCentral()
}

//编译groovy代码时采用 UTF-8
tasks.withType(GroovyCompile) {
    groovyOptions.encoding = "MacRoman"
}

//编译JAVA文件时采用UTF-8
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

def corelib = ext.path.core
def trd = ext.path.trd
def outputdir = ext.path.outputdir
sourceSets {
    main {
        java {
            srcDirs = ["src/main/java"]
        }
        resources {
            srcDirs = ["src/main/resources"]
        }
    }
}
println(configurations.compile.fileCollection { trd })

dependencies {
    compile fileTree(dir: corelib, include: 'framework-core*.jar')
    compile fileTree(dir: corelib, include: 'exception-core*.jar')
    compile fileTree(dir: corelib, include: 'service-core*.jar')
    compile fileTree(dir: trd, include: 'slf4j-api-*.jar')
    compile fileTree(dir: trd, include: 'cglib-2.2.2*.jar')
    compile fileTree(dir: trd, include: 'curator-framework-4.0.0.jar')
    compile fileTree(dir: trd, include: 'curator-client-4.0.0.jar')
    compile fileTree(dir: trd, include: 'dubbo*.jar')
    compile fileTree(dir: trd, include: 'netty*.Final.jar')
    compile fileTree(dir: trd, include: 'javassist-3.22.0-GA*.jar')
    compile fileTree(dir: trd, include: 'guava*.jar')
    compile fileTree(dir: trd, include: 'logback-classic*.jar')
    compile fileTree(dir: trd, include: 'logback-core*.jar')
    compile fileTree(dir: trd, include: 'zookeeper*.jar')
    compile fileTree(dir: trd, include: 'spring-context*.RELEASE.jar')
}
task sourcesJar(type: Jar, dependsOn: build) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task copytolib(type: Copy, dependsOn: build) {
    group 'build'
    description '拷贝本工程构建jar包到lib'
    from 'build/libs'
    into corelib
    exclude '*source*.jar'
}


task copyJarTodir(type: Copy) {
    group 'build'
    description '拷贝工程产生的build.jar到本地库'
    from 'build/libs'
    into corelib
    exclude '**/*.class'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
test.ignoreFailures true
